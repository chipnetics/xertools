name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install V
        uses: vlang/setup-v@v1
        with:
          check-latest: true

      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v2

      - name: Check if code is formatted
        run: |
          v fmt -diff .
          v fmt -verify .
      
      - name: Build ${{ github.event.repository.name }} - xerdump
        run:
          v src/xerdump.v

      - name: Build ${{ github.event.repository.name }} - xerdiff
        run:
          v src/xerdiff.v

      - name: Build ${{ github.event.repository.name }} - xertask
        run:
          v src/xertask.v

      - name: Build ${{ github.event.repository.name }} - xerpred
        run:
          v src/xerpred.v

      - name: Build ${{ github.event.repository.name }} - xer2json
        run:
          v src/xer2json.v
         
      - name: Run Tests
        run: v test .
        env:
          VJOBS: 1

      - name: Make Binary
        run: v src/xertask.v -o xertask
  
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: xertask
          asset_name: xertask
          asset_content_type: application/gzip
         
      